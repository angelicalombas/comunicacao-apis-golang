basePath: /
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      id:
        type: integer
      item_description:
        type: string
      item_price:
        type: number
      item_quantity:
        type: integer
      total_value:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - item_description
    - item_price
    - item_quantity
    - total_value
    - user_id
    type: object
  models.OrderRequest:
    properties:
      item_description:
        type: string
      item_price:
        type: number
      item_quantity:
        type: integer
      total_value:
        type: number
      user_id:
        type: integer
    required:
    - item_description
    - item_price
    - item_quantity
    - total_value
    - user_id
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for an order management system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Order API
  version: "1.0"
paths:
  /orders:
    get:
      description: Get all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new OrderRequest
      parameters:
      - description: OrderRequest
        in: body
        name: OrderRequest
        required: true
        schema:
          $ref: '#/definitions/models.OrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new OrderRequest
      tags:
      - orders
  /orders/{id}:
    delete:
      description: Delete an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an order
      tags:
      - orders
    get:
      description: Get a specific order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get order by ID
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update an existing order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: OrderRequest
        in: body
        name: OrderRequest
        required: true
        schema:
          $ref: '#/definitions/models.OrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an order
      tags:
      - orders
  /users/{id}/orders:
    get:
      description: Get orders for a specific user by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get orders by user ID
      tags:
      - orders
swagger: "2.0"
